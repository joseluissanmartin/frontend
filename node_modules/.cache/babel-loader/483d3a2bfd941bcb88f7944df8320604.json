{"ast":null,"code":"var _jsxFileName = \"/Users/joseluis/frontend/src/Components/contactForm.jsx\";\nimport React from 'react';\nimport InputLine from './InputLine';\nimport { validateEmail, isEmpty } from '.validations';\nexport default class ContactForm extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      contactData: {\n        email: '',\n        name: '',\n        comments: ''\n      },\n      errors: {\n        email: false,\n        name: false,\n        comments: false\n      }\n    };\n\n    this.onChange = (name, event) => {\n      const value = event.target.value;\n      const contactData = Object.assign({}, this.state.contactData);\n      contactData[name] = value;\n      this.setState({\n        contactData\n      });\n    };\n\n    this.doContact = event => {\n      const {\n        email,\n        name,\n        comments\n      } = this.state.contactData;\n      const emailError = !validateEmail(email);\n      const nameError = isEmpty(name);\n      const commentsError = isEmpty(comments);\n      this.setState({\n        errors: {\n          email: emailError,\n          name: nameError,\n          comments: commentsError\n        }\n      });\n      event.preventDefault();\n    };\n  }\n\n  render() {\n    const {\n      email,\n      name,\n      comments\n    } = this.state.contactData;\n    const {\n      errors\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"form\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(InputLine, {\n      name: \"email\",\n      label: \"Correo\",\n      type: \"text\",\n      onChange: this.onChange,\n      error: errors.email,\n      value: email,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(InputLine, {\n      name: \"name\",\n      label: \"Nombre\",\n      type: \"text\",\n      onChange: this.onChange,\n      error: errors.name,\n      value: name,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(TextareaLine, {\n      name: \"comments\",\n      label: \"Comentarios\",\n      rows: \"8\",\n      placeholder: \"Texto ejemplo\",\n      onChange: this.onChange,\n      error: errors.comments,\n      value: comments,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.doContact,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }\n    }, \"Cont\\xE1ctanos\"));\n  }\n\n}","map":{"version":3,"sources":["/Users/joseluis/frontend/src/Components/contactForm.jsx"],"names":["React","InputLine","validateEmail","isEmpty","ContactForm","Component","state","contactData","email","name","comments","errors","onChange","event","value","target","Object","assign","setState","doContact","emailError","nameError","commentsError","preventDefault","render"],"mappings":"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","sourcesContent":["import React from 'react';\nimport InputLine from './InputLine';\nimport { validateEmail, isEmpty } from '.validations';\n\n\nexport default class ContactForm extends React.Component {\n  state = {\n    contactData: {\n      email: '',\n      name: '',\n      comments: ''\n    },\n    errors: {\n      email: false,\n      name: false,\n      comments: false\n    }\n  };\n\n  onChange = (name, event) => {\n    const value = event.target.value;\n    const contactData = Object.assign({}, this.state.contactData);\n    contactData[name] = value;\n    this.setState({\n      contactData\n    });\n  }\n\n  doContact = (event) => {\n    const { email, name, comments } = this.state.contactData;\n    const emailError = !validateEmail(email);\n    const nameError = isEmpty(name);\n    const commentsError = isEmpty(comments)\n\n    this.setState({\n      errors: {\n        email: emailError,\n        name: nameError,\n        comments: commentsError\n      }\n    });\n\n    event.preventDefault();\n  }\n\n  render() {\n    const { email, name, comments } = this.state.contactData;\n    const { errors } = this.state;\n\n    return (\n      <form>\n        <InputLine\n          name=\"email\"\n          label=\"Correo\"\n          type=\"text\"\n          onChange={this.onChange}\n          error={errors.email}\n          value={email}\n        />\n        <InputLine\n          name=\"name\"\n          label=\"Nombre\"\n          type=\"text\"\n          onChange={this.onChange}\n          error={errors.name}\n          value={name}\n        />\n        <TextareaLine\n          name=\"comments\"\n          label=\"Comentarios\"\n          rows=\"8\"\n          placeholder=\"Texto ejemplo\"\n          onChange={this.onChange}\n          error={errors.comments}\n          value={comments}\n        />\n        <button onClick={this.doContact}>Cont&aacute;ctanos</button>\n      </form>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}